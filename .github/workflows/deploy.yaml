name: Frontend
on:
  push:
    branches:
      - master

jobs:
  Tests:
    name: Tests 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: docker build -f ./client/Dockerfile.dev ./client -t arch23/multi-docker-example
      - run: docker run -e CI=true arch23/multi-docker-example npm run test      

  Build-client:
    name: Build-client
    needs: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v2
        with:
          context: ./client
          file: ./client/Dockerfile
          tags: arch23/multi-docker-client
          outputs: type=docker,dest=/tmp/multi-docker-client.tar
      - uses: actions/upload-artifact@v2
        with:
          name: multi-docker-client
          path: /tmp/multi-docker-client.tar          

  # Build-nginx:
  #   name: Build-nginx
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: docker build ./nginx -t arch23/multi-docker-nginx -o type=docker,dest=/tmp/multi-docker-nginx.tar
  #     - uses: actions/cache@v2
  #       env:
  #         cache-name: nginx-docker
  #       with:
  #         path: /tmp/multi-docker-nginx.tar
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}

  # Build-server:
  #   name: Build-server
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: docker build ./server -t arch23/multi-docker-server

  # Build-worker:
  #   name: Build-worker
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: docker build ./worker -t arch23/multi-docker-worker

  DockerHub-upload:
    name: Docker-login
    needs: [Build-client]
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{ secrets.DOCKER_PWD }}" | docker login -u "${{ secrets.DOCKER_ID }}" --password-stdin
      - uses: actions/download-artifact@v2
        with:
          name: multi-docker-client
          path: /tmp
      - run: ls /tmp
      - run: docker load --input /tmp/multi-docker-client.tar
      - run: docker image ls -a

